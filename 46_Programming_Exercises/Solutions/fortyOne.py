# In a game of Lingo, there is a hidden word, five characters long. The object
# of the game is to find this word by guessing, and in return receive two kinds
# of clues: 1) the characters that are fully correct, with respect to identity
# as well as to position, and 2) the characters that are indeed present in the
# word, but which are placed in the wrong position. Write a program with which
# one can play Lingo. Use square brackets to mark characters correct in the
# sense of 1), and ordinary parentheses to mark characters correct in the sense
# of 2). Assuming, for example, that the program conceals the word "tiger", you
# should be able to interact with it in the following way:
#
# >>> import lingo
# snake
# Clue: snak(e)
# fiest
# Clue: f[i](e)s(t)
# times
# Clue: [t][i]m[e]s
# tiger
# Clue: [t][i][g][e][r]
#
# Note: This implementation follows the format of the Guess the Anagram game
# above.  The player's guesses are checked against the dictionary of 5-letter
# lowercase English words

__author__ = "Sandeep Murthy"

def lingo():

    from random import choice
    from time import sleep

    def build_word_list():
        file_path = 'fortyDictionary.txt'
        return [word.strip() for word in open( file_path, 'r' ).readlines() \
                if not word.strip() == '' \
                and len( word.strip() ) == 5]

    def get_secret_word( words ):
        return choice( words )

    def display_clues( guess, secret_word ):
        output = 'Clues: '
        for index, letter in enumerate( guess ):
            if letter == secret_word[index]:
                output += '[' + letter + ']'
            else:
                if letter in secret_word:
                    output += '(' + letter + ')'
                else:
                    output += letter
        print '{}'.format( output )

    def play_new_game( words ):

        print '\nSearching the dictionary for a secret word ... ',
        secret_word = get_secret_word( words )

        print 'OK, found one.'
        guess = ''

        while not guess == secret_word:
            guess = raw_input( '\nEnter your guess here (or enter x to exit at any time): ' ).strip()
            if not guess == 'x':
                if len( guess ) == 5 and guess in words:
                    display_clues( guess, secret_word )
                else:
                    print 'Your guess must be 5-letter lowercase English word.'
                    continue
            else:
                print '\nThe secret word was {}.'.format( secret_word )
                return 'exit'
        return 'correct guess'

    print '\nWelcome to the Lingo game!'
    print '\nHere are your instructions.'
    print '\n\t1.  You must guess a secret 5-letter word (lowercase, English) generated by the computer.'
    print '\n\t2.  If you guess incorrectly then three kinds of clues will be given to you: '
    print '\n\t\ta matching letter in the correct position will be displayed in square brackets \'[]\','
    print '\n\t\ta matching letter in an incorrect position will be displayed in parentheses \'()\','
    print '\n\t\ta non-matching letter will be displayed as is.'

    words = build_word_list()
    result = play_new_game( words )
    while not result == 'exit':
        if result == 'correct guess':
            print '\nCorrect!'
            option = raw_input( '\nDo you wish to play a new game (n) or exit (x)? ' )
            if option == 'n':
                result = play_new_game( words )
                continue
            elif option == 'x':
                result = 'exit'
                break
            else:
                continue
        else:
            break
    print 'Bye!'
